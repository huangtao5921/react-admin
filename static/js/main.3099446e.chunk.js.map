{"version":3,"sources":["images/logo.jpeg","images/custom.jpeg","pages/login/Login.js","config/menuConfig.js","redux/action/index.js","components/layout/siderBar/SiderBar.js","components/layout/header/HeaderBar.js","components/layout/main/Main.js","pages/notFind/NotFind.js","pages/home/Home.js","pages/uesr/connect/Connect.js","App.js","serviceWorker.js","redux/reducer/index.js","index.js","redux/store/configStroe.js"],"names":["module","exports","__webpack_require__","p","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","username","password","window","localStorage","setItem","location","href","message","error","getFieldDecorator","this","react_default","a","createElement","className","es_form","onSubmit","Item","rules","required","input","prefix","icon","type","placeholder","es_button","htmlType","React","Component","WrappedNormalLoginForm","Form","create","name","menuConfig","title","key","children","SWITCH_MENU","Sider","Layout","SubMenu","Menu","SiderBar","state","collapsed","menuList","setMenu","menu","map","item","es_menu","react_router_dom","to","onCollapse","setState","handleClick","_ref","menuName","dispatch","collapsible","src","logoURL","alt","onClick","theme","defaultSelectedKeys","mode","connect","Header","UserInfo","visible","handleMenuClick","removeItem","handleVisibleChange","flag","dropdown","overlay","onVisibleChange","customUrl","HeaderBar","breadcrumb","HeaderBar_UserInfo","Content","Footer","Main","layout","style","minHeight","siderBar_SiderBar","header_HeaderBar","textAlign","NotFind","Home","Connect","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loggedIn","getItem","_this2","react_router","path","component","render","main_Main","exact","Boolean","hostname","match","initialState","reducer","arguments","length","undefined","action","objectSpread","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yWCIlCC,qNACJC,aAAe,SAAAC,GACbA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,IACHE,QAAQC,IAAI,4BAA6BF,GACjB,UAApBA,EAAOG,UAA4C,YAApBH,EAAOI,UACxCC,OAAOC,aAAaC,QAAQ,YAAY,GACxCF,OAAOG,SAASC,KAAO,KAEvBC,IAAQC,MAAM,6CAAW,+EAMxB,IACCC,EAAsBC,KAAKjB,MAAMC,KAAjCe,kBACR,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,SAAUN,KAAKrB,aAAcyB,UAAU,cAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,iBACAH,EAAAC,EAAAC,cAACE,EAAA,EAAKE,KAAN,KACGR,EAAkB,WAAY,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMZ,QAAS,2CADpCE,CAGCE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,OAAQV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAK,OAAOT,UAAU,eAAiBU,YAAY,yBAG5Eb,EAAAC,EAAAC,cAACE,EAAA,EAAKE,KAAN,KACGR,EAAkB,WAAY,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMZ,QAAS,qCADpCE,CAGCE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,OAAQV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAK,OAAOT,UAAU,eAAgBS,KAAK,WAAWC,YAAY,mBAG3Fb,EAAAC,EAAAC,cAACE,EAAA,EAAKE,KAAN,KACEN,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQF,KAAK,UAAUG,SAAS,SAASZ,UAAU,qBAAnD,0BArCQa,IAAMC,YA+CXC,EAFgBC,IAAKC,OAAO,CAAEC,KAAM,gBAApBF,CAAsC1C,6BC9BtD6C,EAnBI,CACjB,CACEC,MAAO,eACPC,IAAK,IACLb,KAAM,QAER,CACEY,MAAO,eACPC,IAAK,QACLb,KAAM,OACNc,SAAU,CACR,CACEF,MAAO,eACPC,IAAK,8CCbAZ,EAAO,CAClBc,YAAa,0BCOPC,EAAUC,IAAVD,MACAE,EAAYC,IAAZD,QAEFE,6MACJC,MAAQ,CACNC,WAAW,EACXC,SAAU,MAWZC,QAAU,SAACC,GACT,OAAOA,EAAKC,IAAI,SAACC,GACf,OAAIA,EAAKb,SACAzB,EAAAC,EAAAC,cAAC2B,EAAD,CAASL,IAAMc,EAAKd,IAAMD,MAAQvB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAO0B,EAAK3B,OAAQX,EAAAC,EAAAC,cAAA,YAAQoC,EAAKf,SAC3E1C,EAAKsD,QAAQG,EAAKb,WAGxBzB,EAAAC,EAAAC,cAACqC,EAAA,EAAKjC,KAAN,CAAWiB,MAAQe,EAAKf,MAAQC,IAAMc,EAAKd,KAC1CxB,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAASC,GAAKH,EAAKd,KACfc,EAAK3B,MAAQX,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAO0B,EAAK3B,OACjCX,EAAAC,EAAAC,cAAA,YAAQoC,EAAKf,cAM3BmB,WAAa,SAAAT,GACXpD,EAAK8D,SAAS,CAAEV,iBAGlBW,YAAc,SAAAC,GAAc,IDzCHC,ECyCRR,EAAWO,EAAXP,MAEfS,EADqBlE,EAAKC,MAAlBiE,WD1CeD,EC2CHR,EAAKxD,MAAMyC,MD1C1B,CACLX,KAAMA,EAAKc,YACXoB,mGCWA,IAAMZ,EAAWnC,KAAKoC,QAAQb,GAC9BvB,KAAK4C,SAAS,CACZT,8CA+BF,IAAIb,EAIJ,OAHKtB,KAAKiC,MAAMC,YACdZ,EAAOrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,kCAGPH,EAAAC,EAAAC,cAACyB,EAAD,CAAOqB,aAAW,EAACf,UAAYlC,KAAKiC,MAAMC,UAAYS,WAAa3C,KAAK2C,YACtE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8C,IAAMC,IAAUC,IAAI,KAC5C9B,GAEJrB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMa,QAAUrD,KAAK6C,YAAcS,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,KAAK,UAC7ExD,KAAKiC,MAAME,kBAnDAlB,IAAMC,WA0DduC,gBAAUzB,uCChEjB0B,UAAW7B,IAAX6B,QAEFC,6MACJ1B,MAAQ,CACN2B,SAAS,KAGXC,gBAAkB,SAAAjF,GACF,aAAVA,EAAE6C,MACJ3C,EAAK8D,SAAS,CACZgB,SAAS,IAEXpE,OAAOC,aAAaqE,WAAW,YAC/BtE,OAAOG,SAASC,KAAO,aAI3BmE,oBAAsB,SAAAC,GACpBlF,EAAK8D,SAAS,CAAEgB,QAASI,6EAIzB,IAAM3B,EACJpC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMa,QAAUrD,KAAK6D,iBACnB5D,EAAAC,EAAAC,cAACqC,EAAA,EAAKjC,KAAN,CAAWkB,IAAI,YAAf,6BAGJ,OACExB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAUC,QAAU7B,EAAO8B,gBAAkBnE,KAAK+D,oBAAsBH,QAAU5D,KAAKiC,MAAM2B,SAC3F3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa8C,IAAMkB,IAAYhB,IAAI,KAClDnD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAK,wBA7BEI,IAAMC,WAoCvBmD,mLAEF,OACEpE,EAAAC,EAAAC,cAACuD,EAAD,KACEzD,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACErE,EAAAC,EAAAC,cAACmE,EAAA,EAAW/D,KAAZ,KACIP,KAAKjB,MAAMgE,WAGjB9C,EAAAC,EAAAC,cAACoE,EAAD,cATgBtD,IAAMC,WAmBfuC,cAJS,SAACxB,GAAD,MAAY,CAClCc,SAAUd,EAAMc,WAGHU,CAAyBY,GCzDhCG,UAAoB3C,IAApB2C,SAASC,EAAW5C,IAAX4C,OAqBFC,mLAjBX,OACEzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAQC,MAAO,CAAEC,UAAW,UAC1B5E,EAAAC,EAAAC,cAAC2E,EAAD,MACA7E,EAAAC,EAAAC,cAACwE,EAAA,EAAD,KACE1E,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZJ,KAAKjB,MAAM2C,WAGhBzB,EAAAC,EAAAC,cAACsE,EAAD,CAAQG,MAAO,CAAEI,UAAW,WAA5B,0DAZS/D,IAAMC,WCWV+D,mLAbX,OACEhF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8DAMJf,QAAQC,IAAI,sCAXM4B,IAAMC,WCgBbgE,mLAbX,OACEjF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uEAMJf,QAAQC,IAAI,uCAXG4B,IAAMC,WCgBViE,mLAbX,OACElF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uEAMJf,QAAQC,IAAI,0CAXM4B,IAAMC,WCsCbkE,cA9Bb,SAAAA,EAAYrG,GAAO,IAAAD,EAAA,OAAAuG,OAAAC,EAAA,EAAAD,CAAArF,KAAAoF,IACjBtG,EAAAuG,OAAAE,EAAA,EAAAF,CAAArF,KAAAqF,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAzF,KAAMjB,KACDkD,MAAQ,CACXyD,SAAUlG,OAAOC,aAAakG,QAAQ,aAHvB7G,wEAMV,IAAA8G,EAAA5F,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAYrH,IACjCuB,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,IAAIE,OAAS,kBACvBJ,EAAK3D,MAAMyD,SACTzF,EAAAC,EAAAC,cAAC8F,EAAD,KACEhG,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOK,OAAK,EAACJ,KAAK,IAAIC,UAAYb,IAClCjF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAYZ,IACxClF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOE,UAAYd,MAIvBhF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAUnD,GAAG,uBAtBTzB,IAAMC,WCGJiF,QACW,cAA7B3G,OAAOG,SAASyG,UAEe,UAA7B5G,OAAOG,SAASyG,UAEhB5G,OAAOG,SAASyG,SAASC,MACvB,gFChBAC,EAAe,CACnBvD,SAAU,gBAGGwD,EAAA,WAAmC,IAAlCtE,EAAkCuE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BF,EAAeK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAO9F,MACb,KAAKA,EAAKc,YACR,OAAO0D,OAAAuB,EAAA,EAAAvB,CAAA,GACFpD,EADL,CAEEc,SAAU4D,EAAO5D,WAErB,QACE,OAAOsC,OAAAuB,EAAA,EAAAvB,CAAA,GACFpD,KCRL4E,ECJeC,YAAYP,EAAS/G,OAAOuH,8BAAgCvH,OAAOuH,gCDMxFC,IAAShB,OACP/F,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAUJ,MAAQA,GAChB5G,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAAC+G,EAAD,QAGFC,SAASC,eAAe,SFkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3099446e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.96a3d885.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/custom.95403f09.jpeg\";","import React from 'react';\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport './login.css';\n\nclass Login extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        if (values.username === 'admin' && values.password === '1111111') {\n          window.localStorage.setItem('loggedIn', true);\n          window.location.href = '/';\n        } else {\n          message.error('账号或密码错误', 1);\n        }\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"login-container\">\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <div className=\"sub-title\">登 录</div>\n          <Form.Item>\n            {getFieldDecorator('username', {\n              rules: [{ required: true, message: '请输入用户名!' }],\n            })(\n              <Input prefix={<Icon type=\"user\" className='login-icon' />} placeholder=\"用户名\"/>,\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message: '请输入密码!' }],\n            })(\n              <Input prefix={<Icon type=\"lock\" className='login-icon'/>} type=\"password\" placeholder=\"密码\"/>,\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Login);\n\nexport default WrappedNormalLoginForm;\n\n\n","const menuConfig = [\n  {\n    title: '首页',\n    key: '/',\n    icon: 'home'\n  },\n  {\n    title: '用户',\n    key: '/user',\n    icon: 'user',\n    children: [\n      {\n        title: '联系',\n        key: '/user/connect',\n      },\n    ]\n  }\n];\n\nexport default menuConfig;\n","export const type = {\n  SWITCH_MENU: 'SWITCH_MENU'\n};\n\nexport function switchMenu(menuName) {\n  return {\n    type: type.SWITCH_MENU,\n    menuName\n  }\n}\n\n\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { Menu, Icon, Layout } from 'antd';\nimport menuConfig from '../../../config/menuConfig';\nimport logoURL from '../../../images/logo.jpeg';\nimport { connect } from 'react-redux';\nimport { switchMenu } from '../../../redux/action';\nimport './siderBar.css';\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SiderBar extends React.Component {\n  state = {\n    collapsed: false,\n    menuList: [],\n  };\n\n  componentWillMount() {\n    const menuList = this.setMenu(menuConfig);\n    this.setState({\n      menuList\n    })\n  }\n\n  // 处理菜单列表\n  setMenu = (menu) => {\n    return menu.map((item) => {\n      if (item.children) {\n        return <SubMenu key={ item.key } title={ <span><Icon type={ item.icon }/><span>{ item.title }</span></span> }>\n                 { this.setMenu(item.children) }\n               </SubMenu>\n    }\n      return <Menu.Item title={ item.title } key={ item.key } >\n              <NavLink to={ item.key } >\n                { item.icon && <Icon type={ item.icon }/> }\n                <span>{ item.title }</span>\n              </NavLink>\n            </Menu.Item>\n    });\n  };\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed });\n  };\n\n  handleClick = ({ item }) => {\n    const { dispatch } = this.props;\n    dispatch(switchMenu(item.props.title));\n  };\n\n  render() {\n    let name;\n    if (!this.state.collapsed) {\n      name = <span className=\"name\">React管理后台</span>;\n    }\n    return (\n      <Sider collapsible collapsed={ this.state.collapsed } onCollapse={ this.onCollapse }>\n        <div className=\"logo\">\n          <img className=\"logo-img\" src={ logoURL } alt=\"\"/>\n          { name }\n        </div>\n        <Menu onClick={ this.handleClick } theme=\"dark\" defaultSelectedKeys={['/']} mode=\"inline\">\n          { this.state.menuList }\n        </Menu>\n      </Sider>\n    );\n  }\n}\n\nexport default connect()(SiderBar);\n","import React from 'react';\nimport { Layout, Menu, Dropdown, Icon, Breadcrumb } from 'antd';\nimport customUrl from '../../../images/custom.jpeg';\nimport './headerBar.css';\nimport { connect } from 'react-redux';\nconst { Header } = Layout;\n\nclass UserInfo extends React.Component {\n  state = {\n    visible: false,   // 菜单是否显示\n  };\n\n  handleMenuClick = e => {\n    if (e.key === 'outLogin') {\n      this.setState({\n        visible: false\n      });\n      window.localStorage.removeItem('loggedIn');\n      window.location.href = '/login';\n    }\n  };\n\n  handleVisibleChange = flag => {\n    this.setState({ visible: flag });\n  };\n\n  render() {\n    const menu = (\n      <Menu onClick={ this.handleMenuClick }>\n        <Menu.Item key=\"outLogin\">退出登录</Menu.Item>\n      </Menu>\n    );\n    return (\n      <Dropdown overlay={ menu } onVisibleChange={ this.handleVisibleChange } visible={ this.state.visible }>\n        <div className=\"ant-dropdown-link\">\n          <img className=\"custom-img\" src={ customUrl } alt=\"\"/>\n          <Icon type=\"caret-down\" />\n        </div>\n      </Dropdown>\n    );\n  }\n}\n\nclass HeaderBar extends React.Component {\n  render() {\n    return (\n      <Header>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            { this.props.menuName }\n          </Breadcrumb.Item>\n        </Breadcrumb>\n        <UserInfo/>\n      </Header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  menuName: state.menuName\n});\n\nexport default connect(mapStateToProps)(HeaderBar);\n","import React from 'react';\nimport {Layout} from \"antd\";\nimport SiderBar from \"../siderBar/SiderBar\";\nimport HeaderBar from \"../header/HeaderBar\";\nimport './main.css';\nconst { Content, Footer } = Layout;\n\nclass Main extends React.Component{\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <SiderBar></SiderBar>\n        <Layout>\n          <HeaderBar></HeaderBar>\n          <Content>\n            <div className=\"main-content\">\n              {this.props.children}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2019 Created by Nicholas H.Tao</Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nclass NotFind extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h3>404</h3>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    console.log(\"404渲染完毕\")\n  }\n\n}\n\nexport default NotFind\n","import React from 'react';\n\nclass Home extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h3>首页</h3>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    console.log(\"Home渲染完毕\")\n  }\n\n}\n\nexport default Home\n","import React from 'react';\n\nclass Connect extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h3>联系</h3>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    console.log(\"Connect渲染完毕\")\n  }\n\n}\n\nexport default Connect\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './app.css';\nimport Login from './pages/login/Login';\nimport Main from './components/layout/main/Main';\nimport NotFind from './pages/notFind/NotFind';\nimport Home from './pages/home/Home';\nimport Connect from './pages/uesr/connect/Connect';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: window.localStorage.getItem('loggedIn')\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\" component={ Login } />\n          <Route path=\"/\" render={ () =>\n            this.state.loggedIn ? (\n              <Main>\n                <Switch>\n                  <Route exact path=\"/\" component={ Home }/>\n                  <Route path=\"/user/connect\" component={ Connect }/>\n                  <Route component={ NotFind }/>\n                </Switch>\n              </Main>\n            ) : (\n              <Redirect to=\"/login\"/>\n            )\n          }/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a pages, after all the\n// existing tabs open on the pages have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our pages is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this pages are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the pages.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the pages.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { type } from '../action';\n\nconst initialState = {\n  menuName: '首页'\n};\n\nexport default (state = initialState , action) => {\n  switch (action.type) {\n    case type.SWITCH_MENU:\n      return {\n        ...state,\n        menuName: action.menuName\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configStore from './redux/store/configStroe';\nconst store = configStore();\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from 'redux';\nimport reducer from './../reducer';\n\nexport default () => createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n"],"sourceRoot":""}